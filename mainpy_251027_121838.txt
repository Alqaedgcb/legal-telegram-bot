{
  "name": "Legal_Consultation_Telegram_Bot",
  "description": "بوت قانوني ذكي لإدارة الاستشارات القانونية والمحامين عبر تيليجرام، مع صلاحيات مدير ومراقبة سلوك المستخدمين وربط n8n لاحقاً.",
  "language": "python",
  "entry_point": "main.py",
  "dependencies": [
    "python-telegram-bot==20.8"
  ],
  "files": {
    "main.py": "# ===========================\n# 🤖 Legal Consultation Bot\n# ===========================\nimport os\nimport logging\nfrom telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup\nfrom telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes\n\n# ⚠️ ضع هنا معلوماتك الخاصة\nBOT_TOKEN = \"8228823766:AAEd-LfKPPkGmurbNSQdBkNgEVpwpw_Lre8\"\nMANAGER_CHAT_ID = \"1101452818\"\n\n# قواعد البيانات المؤقتة\nusers_db = {}\npending_approvals = {}\nuser_warnings = {}\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nasync def start(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    user = update.effective_user\n    user_id = user.id\n\n    if user_id in users_db and users_db[user_id].get('banned'):\n        await update.message.reply_text(\"❌ تم حظرك من استخدام البوت.\")\n        return\n\n    if user_id not in users_db or not users_db[user_id].get('approved'):\n        keyboard = [[InlineKeyboardButton(\"✅ قبول المستخدم\", callback_data=f\"approve_{user_id}\"), InlineKeyboardButton(\"❌ رفض المستخدم\", callback_data=f\"reject_{user_id}\")]]\n        reply_markup = InlineKeyboardMarkup(keyboard)\n        try:\n            await context.bot.send_message(\n                chat_id=MANAGER_CHAT_ID,\n                text=f\"🆕 طلب انضمام جديد:\\n\\n👤 {user.first_name} {user.last_name or ''}\\n📛 @{user.username or 'غير متوفر'}\\n🆔 {user_id}\\n\\nاختر الإجراء:\",\n                reply_markup=reply_markup)\n\n            pending_approvals[user_id] = {\n                'first_name': user.first_name,\n                'last_name': user.last_name,\n                'username': user.username\n            }\n            await update.message.reply_text(\"⏳ تم إرسال طلبك إلى الإدارة، يرجى انتظار الموافقة.\")\n        except Exception as e:\n            await update.message.reply_text(\"❌ خطأ في الاتصال بالإدارة.\")\n            logger.error(e)\n    else:\n        await show_main_menu(update, context)\n\nasync def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    keyboard = [\n        [InlineKeyboardButton(\"📞 استشارة قانونية فورية\", callback_data=\"consultation\")],\n        [InlineKeyboardButton(\"⚖️ أنواع الخدمات القانونية\", callback_data=\"services\")],\n        [InlineKeyboardButton(\"🏢 عن المكتب والمحامين\", callback_data=\"about\")],\n        [InlineKeyboardButton(\"📝 حجز موعد استشارة\", callback_data=\"appointment\")]\n    ]\n    reply_markup = InlineKeyboardMarkup(keyboard)\n    text = \"\"\"👋 أهلاً بك في البوت القانوني الذكي.\nاختر الخدمة المطلوبة:\"\"\"\n    if update.message:\n        await update.message.reply_text(text, reply_markup=reply_markup)\n    else:\n        await update.callback_query.edit_message_text(text, reply_markup=reply_markup)\n\nasync def handle_approval(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    query = update.callback_query\n    await query.answer()\n    action, user_id = query.data.split('_')\n    user_id = int(user_id)\n\n    if action == \"approve\":\n        users_db[user_id] = {'approved': True, 'warnings': 0}\n        pending_approvals.pop(user_id, None)\n        await context.bot.send_message(chat_id=user_id, text=\"🎉 تم قبولك! اكتب /start للبدء.\")\n        await query.edit_message_text(f\"✅ تمت الموافقة على المستخدم {user_id}\")\n\n    elif action == \"reject\":\n        pending_approvals.pop(user_id, None)\n        await context.bot.send_message(chat_id=user_id, text=\"❌ تم رفض طلبك.\")\n        await query.edit_message_text(f\"❌ تم رفض المستخدم {user_id}\")\n\nasync def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    query = update.callback_query\n    await query.answer()\n    data = query.data\n\n    if data == \"consultation\":\n        await query.edit_message_text(\n            \"📞 أرسل وصف مشكلتك القانونية بالتفصيل وسيتواصل معك أحد المحامين.\")\n\n    elif data == \"services\":\n        await query.edit_message_text(\n            \"⚖️ خدماتنا:\\n• صياغة العقود\\n• المرافعات\\n• الاستشارات\\n• القضايا التجارية والعقارية\")\n\n    elif data == \"about\":\n        await query.edit_message_text(\n            \"🏢 مكتب المحاماة:\\nنحن محامون متخصصون في مختلف القضايا.\\n📞 +967776086053\\n📧 info@lawfirm.com\")\n\n    elif data == \"appointment\":\n        await query.edit_message_text(\n            \"📝 للحجز، أرسل اسمك ونوع القضية والتاريخ المطلوب.\")\n\nasync def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    user_id = update.effective_user.id\n    text = update.message.text.lower()\n\n    if user_id not in users_db or not users_db[user_id].get('approved'):\n        await update.message.reply_text(\"⏳ لا يمكنك استخدام البوت حتى يتم الموافقة عليك.\")\n        return\n\n    forbidden = [\"http://\", \"https://\", \".com\", \"سب\", \"شتم\", \"قذف\"]\n    for bad in forbidden:\n        if bad in text:\n            user_warnings[user_id] = user_warnings.get(user_id, 0) + 1\n            count = user_warnings[user_id]\n            if count >= 3:\n                users_db[user_id]['banned'] = True\n                await update.message.reply_text(\"❌ تم حظرك بسبب مخالفات متكررة.\")\n                await context.bot.send_message(chat_id=1101452818, text=f\"🚨 تم حظر المستخدم {user_id}\")\n                return\n            else:\n                await update.message.reply_text(f\"⚠️ تحذير ({count}/3): يمنع نشر روابط أو كلمات مسيئة.\")\n                await context.bot.send_message(chat_id=1101452818, text=f\"⚠️ مخالفة من المستخدم {user_id}\")\n                return\n\n    await update.message.reply_text(\"✅ تم استلام رسالتك، سيتم الرد عليك قريباً.\")\n\nasync def ban_command(update: Update, context: ContextTypes.DEFAULT_TYPE):\n    if str(update.effective_user.id) != MANAGER_CHAT_ID:\n        return\n    if context.args:\n        try:\n            uid = int(context.args[0])\n            users_db[uid] = {'banned': True}\n            await update.message.reply_text(f\"✅ تم حظر المستخدم {uid}\")\n        except:\n            await update.message.reply_text(\"❌ رقم غير صالح.\")\n\ndef main():\n    if BOT_TOKEN.startswith(\"8228823766:AAEd-LfKPPkGmurbNSQdBkNgEVpwpw_Lre8\"):\n        print(\"❌ عدّل التوكن والمعرف أولاً.\")\n        return\n    app = Application.builder().token(BOT_TOKEN).build()\n    app.add_handler(CommandHandler(\"start\", start))\n    app.add_handler(CommandHandler(\"ban\", ban_command))\n    app.add_handler(CallbackQueryHandler(handle_approval, pattern=\"^(approve|reject)_\"))\n    app.add_handler(CallbackQueryHandler(handle_menu, pattern=\"^(consultation|services|about|appointment)$\"))\n    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))\n    print(\"🤖 البوت القانوني يعمل الآن...\")\n    app.run_polling()\n\nif __name__ == \"__main__\":\n    main()\n"
  }
}
# -------------------------------
# 🚀 Fake web server for Render
# -------------------------------
from flask import Flask
app = Flask(__name__)

@app.route('/')
def home():
    return "Legal Bot is running!"

if __name__ == "__main__":
    from threading import Thread
    Thread(target=lambda: app.run(host="0.0.0.0", port=10000)).start()
    main()
